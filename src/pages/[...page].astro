---
import Base from "$layouts/Base.astro";
import type { QuoteFrontmatter } from "$lib/types";
import { MarkdownInstance } from "astro";
import R from "ramda";

export async function getStaticPaths({ paginate }) {
  const quotes = await Astro.glob<QuoteFrontmatter>("../lib/quotes/**/*.md");


  const diff = (a: MarkdownInstance<QuoteFrontmatter>, b: MarkdownInstance<QuoteFrontmatter>) => {
    // TODO: Deal with missing dateAdded
    const first = a.frontmatter.dateAdded
    const second = b.frontmatter.dateAdded
    second.localeCompare(first);
  }

  const sortedQuotes = (R.sort(diff, quotes));

  return paginate(sortedQuotes, { pageSize: 3 });
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props;
---

<Base title="Quoke &mdash; a few quotations">
{page.data.map(post => (
<div class="quote">
  <div class="text">{post.frontmatter.text}</div>
  <div class="divider">&mdash;&mdash;</div>
  <div class="author">{post.frontmatter.author}</div>
  <div class="source">{post.frontmatter.source}</div>
</div>
))}

{page.url.prev ? <a href={page.url.prev}>Previous</a> : null} --
{page.url.next ? <a href={page.url.next}>Next</a> : null}
</Base>

<style lang="scss">
  .quote {
    margin-bottom: 3em;
  }

  .text {}

  .divider {
    margin-top: .5em;
    margin-bottom: .5em;
    opacity: .2;
  }

  .author {
    font-weight: bold;
  }

  .source {
    margin-top: .25em;
    opacity: .7;
  }
</style>